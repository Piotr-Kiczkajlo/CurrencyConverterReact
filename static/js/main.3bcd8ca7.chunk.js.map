{"version":3,"sources":["Form/InputPLN/index.js","Form/ValueOption/index.js","Form/index.js","App.js","reportWebVitals.js","index.js"],"names":["InputPLN","amout","setAmout","value","className","type","min","step","required","autoFocus","onChange","target","ValueOption","defaultValue","Form","useState","onSubmit","event","preventDefault","onReset","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAceA,EAZE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACf,uBACEC,MAAOF,EACPG,UAAU,mBACVC,KAAK,SACLC,IAAI,MACJC,KAAK,MACLC,UAAQ,EACRC,WAAS,EACTC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBT,EAASS,EAAOR,WCC/BS,G,MAVK,kBAClB,yBAAQR,UAAU,oBAAlB,UACE,wBAAQD,MAAM,IAAIU,cAAY,EAA9B,iBAGA,wBAAQV,MAAM,OAAd,iBACA,wBAAQA,MAAM,SAAd,sBCyDWW,EA5DF,WACX,MAA0BC,mBAAS,IAAnC,mBAAOd,EAAP,KAAcC,EAAd,KAQA,OACE,sBAAME,UAAU,OAAOY,SARJ,SAACC,GACpBA,EAAMC,kBAOyCC,QAL7B,WAClBjB,EAAS,KAIT,SACE,2BAAUE,UAAU,iBAApB,UACE,wBAAQA,UAAU,eAAlB,+BACA,uBAAOA,UAAU,aAAjB,6CACA,sBAAMA,UAAU,aAAhB,SACE,cAAC,EAAD,CAAUH,MAAOA,EAAOC,SAAUA,MAEpC,uBAAOE,UAAU,aAAjB,kCACA,cAAC,EAAD,IACA,uBAAOA,UAAU,aAAjB,8BACA,oCACM,IACJ,uBACEA,UAAU,cACVC,KAAK,SACLC,IAAI,MACJH,MAAM,OACNI,KAAK,YAGT,oCACM,IACJ,uBACEH,UAAU,cACVC,KAAK,SACLC,IAAI,MACJH,MAAM,OACNI,KAAK,YAGT,oCACM,IACJ,uBACEH,UAAU,cACVC,KAAK,SACLC,IAAI,MACJH,MAAM,OACNI,KAAK,YAGT,sBAAMH,UAAU,aAAhB,0BACA,wBAAQA,UAAU,SAAlB,eACA,wBAAQA,UAAU,uBAAlB,sBACA,wBAAQA,UAAU,oBAAoBC,KAAK,QAA3C,qCCpDOe,MAJf,WAEE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3bcd8ca7.chunk.js","sourcesContent":["import \"./index.css\";\r\n\r\nconst InputPLN = ({ amout, setAmout }) => (\r\n  <input\r\n    value={amout}\r\n    className=\"form__inputValue\"\r\n    type=\"number\"\r\n    min=\".01\"\r\n    step=\".01\"\r\n    required\r\n    autoFocus\r\n    onChange={({ target }) => setAmout(target.value)}\r\n  />\r\n);\r\nexport default InputPLN;\r\n","import \"./index.css\";\r\n\r\nconst ValueOption = () => (\r\n  <select className=\"form__valueOption\">\r\n    <option value=\"$\" defaultValue>\r\n      USD\r\n    </option>\r\n    <option value=\"£\">GBP</option>\r\n    <option value=\"€\">EUR</option>\r\n  </select>\r\n);\r\n\r\nexport default ValueOption;\r\n","import { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport InputPLN from \"./InputPLN\";\r\nimport ValueOption from \"./ValueOption\";\r\n\r\nconst Form = () => {\r\n  const [amout, setAmout] = useState(\"\");\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const onFormReset = () => {\r\n    setAmout(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit} onReset={onFormReset}>\r\n      <fieldset className=\"form__fieldset\">\r\n        <legend className=\"form__legend\">Przelicznik walut</legend>\r\n        <label className=\"form__text\">Wprowadź kwotę w PLN:</label>\r\n        <span className=\"form__text\">\r\n          <InputPLN amout={amout} setAmout={setAmout} />\r\n        </span>\r\n        <label className=\"form__text\">Wybierz walutę:</label>\r\n        <ValueOption />\r\n        <label className=\"form__text\"> Aktualne kursy:</label>\r\n        <p>\r\n          USD{\" \"}\r\n          <input\r\n            className=\"form__field\"\r\n            type=\"number\"\r\n            min=\"0.1\"\r\n            value=\"3.77\"\r\n            step=\"0.01\"\r\n          />\r\n        </p>\r\n        <p>\r\n          GBP{\" \"}\r\n          <input\r\n            className=\"form__field\"\r\n            type=\"number\"\r\n            min=\"0.1\"\r\n            value=\"5.27\"\r\n            step=\"0.01\"\r\n          />\r\n        </p>\r\n        <p>\r\n          EUR{\" \"}\r\n          <input\r\n            className=\"form__field\"\r\n            type=\"number\"\r\n            min=\"0.1\"\r\n            value=\"4.55\"\r\n            step=\"0.01\"\r\n          />\r\n        </p>\r\n        <span className=\"form__text\">Otrzymujesz:</span>\r\n        <strong className=\"result\">0</strong>\r\n        <button className=\"form__exchangeButton\">Przelicz</button>\r\n        <button className=\"form__resetButton\" type=\"reset\">\r\n          Wyczyść\r\n        </button>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n","import Form from \"./Form\";\n\nfunction App() {\n  \n  return <Form />;\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}