{"version":3,"sources":["Form/InputPLN/index.js","currencies.js","Form/Result/index.js","Form/index.js","App.js","reportWebVitals.js","index.js"],"names":["InputPLN","amout","setAmout","value","className","type","min","step","required","autoFocus","onChange","target","currencies","short","name","rate","Result","result","finalyAmout","toFixed","currency","Form","useState","setCurrency","setResult","manualRate","setManualRate","onSubmit","event","preventDefault","find","calculateResult","onReset","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAceA,EAZE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACf,uBACEC,MAAOF,EACPG,UAAU,mBACVC,KAAK,SACLC,IAAI,MACJC,KAAK,MACLC,UAAQ,EACRC,WAAS,EACTC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBT,EAASS,EAAOR,WCM/BS,EAjBI,CACjB,CACEC,MAAO,IACPC,KAAM,MACNC,KAAM,MAER,CACEF,MAAO,OACPC,KAAM,MACNC,KAAM,MAER,CACEF,MAAO,SACPC,KAAM,OACNC,KAAM,OCJKC,EAVA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,QACIA,GACA,mCACGA,EAAOC,YAAYC,QAAQ,GAD9B,OACwCF,EAAOG,aCuFtCC,EArFF,WACX,MAAgCC,mBAASV,EAAW,GAAGC,OAAvD,mBAAOO,EAAP,KAAiBG,EAAjB,KACA,EAA0BD,mBAAS,IAAnC,mBAAOrB,EAAP,KAAcC,EAAd,KACA,EAA4BoB,mBAAS,IAArC,mBAAOL,EAAP,KAAeO,EAAf,KACA,EAAoCF,qBAApC,mBAAOG,EAAP,KAAmBC,EAAnB,KAmBA,OACE,sBAAMtB,UAAU,OAAOuB,SAVJ,SAACC,GACpBA,EAAMC,iBATgB,SAAC5B,EAAOmB,GAC9B,IAAML,EAAOH,EAAWkB,MAAK,qBAAGjB,QAAsBO,KAAUL,KAEhES,EAAU,CACRN,aAAcjB,EAAQc,EACtBK,aAKFW,CAAgB9B,EAAOmB,IAQwBY,QAN7B,WAClB9B,EAAS,IACTsB,EAAU,KAIV,SACE,2BAAUpB,UAAU,iBAApB,UACE,wBAAQA,UAAU,eAAlB,+BACA,uBAAOA,UAAU,aAAjB,6CACA,sBAAMA,UAAU,aAAhB,SACE,cAAC,EAAD,CAAUH,MAAOA,EAAOC,SAAUA,MAEpC,uBAAOE,UAAU,aAAjB,kCACA,wBACEA,UAAU,oBACVD,MAAOiB,EACPV,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBY,EAAYZ,EAAOR,QAH/C,SAKGS,EAAWqB,KAAI,SAACb,GAAD,OACd,wBAA6BjB,MAAOiB,EAASP,MAA7C,SACGO,EAASN,MADCM,EAASP,YAK1B,uBAAOT,UAAU,aAAjB,8BACA,oCACM,IACJ,uBACEA,UAAU,cACVC,KAAK,SACLC,IAAI,MACJH,MAAOsB,EACPlB,KAAK,OACLG,SAAU,kBAAMgB,EAAcN,EAASL,YAG3C,oCACM,IACJ,uBACEX,UAAU,cACVC,KAAK,SACLC,IAAI,MACJH,MAAM,OACNI,KAAK,YAGT,oCACM,IACJ,uBACEH,UAAU,cACVC,KAAK,SACLC,IAAI,MACJH,MAAM,OACNI,KAAK,YAGT,sBAAMH,UAAU,aAAhB,0BACA,cAAC,EAAD,CAAQa,OAAQA,IAChB,wBAAQb,UAAU,uBAAlB,sBACA,wBAAQA,UAAU,oBAAoBC,KAAK,QAA3C,qCC/EO6B,MAHf,SAAajB,EAAQc,GACnB,OAAO,cAAC,EAAD,CAAMd,OAAQA,EAAQc,gBAAiBA,KCSjCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0e4b76c6.chunk.js","sourcesContent":["import \"./index.css\";\r\n\r\nconst InputPLN = ({ amout, setAmout }) => (\r\n  <input\r\n    value={amout}\r\n    className=\"form__inputValue\"\r\n    type=\"number\"\r\n    min=\".01\"\r\n    step=\".01\"\r\n    required\r\n    autoFocus\r\n    onChange={({ target }) => setAmout(target.value)}\r\n  />\r\n);\r\nexport default InputPLN;\r\n","const currencies = [\r\n  {\r\n    short: \"$\",\r\n    name: \"USD\",\r\n    rate: 3.77,\r\n  },\r\n  {\r\n    short: \"£\",\r\n    name: \"GBP\",\r\n    rate: 5.27,\r\n  },\r\n  {\r\n    short: \"€\",\r\n    name: \"Euro\",\r\n    rate: 4.55,\r\n  },\r\n];\r\nexport default currencies;\r\n","const Result = ({ result }) => {\r\n  return (\r\n    !!result && (\r\n      <strong>\r\n        {result.finalyAmout.toFixed(2)}&nbsp;{result.currency}\r\n      </strong>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport InputPLN from \"./InputPLN\";\r\nimport currencies from \"../currencies\";\r\nimport Result from \"./Result\";\r\n\r\nconst Form = () => {\r\n  const [currency, setCurrency] = useState(currencies[0].short);\r\n  const [amout, setAmout] = useState(\"\");\r\n  const [result, setResult] = useState(\"\");\r\n  const [manualRate, setManualRate] = useState();\r\n\r\n  const calculateResult = (amout, currency) => {\r\n    const rate = currencies.find(({ short }) => short === currency).rate;\r\n\r\n    setResult({\r\n      finalyAmout: +amout / rate,\r\n      currency,\r\n    });\r\n  };\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(amout, currency);\r\n  };\r\n  const onFormReset = () => {\r\n    setAmout(\"\");\r\n    setResult(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit} onReset={onFormReset}>\r\n      <fieldset className=\"form__fieldset\">\r\n        <legend className=\"form__legend\">Przelicznik walut</legend>\r\n        <label className=\"form__text\">Wprowadź kwotę w PLN:</label>\r\n        <span className=\"form__text\">\r\n          <InputPLN amout={amout} setAmout={setAmout} />\r\n        </span>\r\n        <label className=\"form__text\">Wybierz walutę:</label>\r\n        <select\r\n          className=\"form__valueOption\"\r\n          value={currency}\r\n          onChange={({ target }) => setCurrency(target.value)}\r\n        >\r\n          {currencies.map((currency) => (\r\n            <option key={currency.short} value={currency.short}>\r\n              {currency.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label className=\"form__text\"> Aktualne kursy:</label>\r\n        <p>\r\n          USD{\" \"}\r\n          <input\r\n            className=\"form__field\"\r\n            type=\"number\"\r\n            min=\"0.1\"\r\n            value={manualRate}\r\n            step=\"0.01\"\r\n            onChange={() => setManualRate(currency.rate)}\r\n          />\r\n        </p>\r\n        <p>\r\n          GBP{\" \"}\r\n          <input\r\n            className=\"form__field\"\r\n            type=\"number\"\r\n            min=\"0.1\"\r\n            value=\"5.27\"\r\n            step=\"0.01\"\r\n          />\r\n        </p>\r\n        <p>\r\n          EUR{\" \"}\r\n          <input\r\n            className=\"form__field\"\r\n            type=\"number\"\r\n            min=\"0.1\"\r\n            value=\"4.55\"\r\n            step=\"0.01\"\r\n          />\r\n        </p>\r\n        <span className=\"form__text\">Otrzymujesz:</span>\r\n        <Result result={result} />\r\n        <button className=\"form__exchangeButton\">Przelicz</button>\r\n        <button className=\"form__resetButton\" type=\"reset\">\r\n          Wyczyść\r\n        </button>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n","import Form from \"./Form\";\r\n\r\nfunction App(result, calculateResult) {\r\n  return <Form result={result} calculateResult={calculateResult} />;\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}